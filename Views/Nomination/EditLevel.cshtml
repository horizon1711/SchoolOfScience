@model SchoolOfScience.Models.NominationLevel

@{
}

<h2>Edit</h2>

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    
    @Html.HiddenFor(model => model.id)
    @Html.HiddenFor(model => model.nomination_id)
    @Html.HiddenFor(model => model.nomination_level)

<fieldset>
    <legend>Nomination Level</legend>
    
    <div class="editor-label">
        Program Name
    </div>
    <div class="editor-field">
        @Html.DisplayFor(model => model.Nomination.Program.name)
    </div>

    <div class="editor-label">
        Level
        @Html.DisplayFor(model => model.nomination_level)
        @Html.ValidationMessageFor(model => model.nomination_level)
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.start_date)
    </div>
    <div class="editor-field">
        @Html.TextBoxFor(model => model.start_date, "{0:yyyy-MM-dd}", new { @class = "date-picker" })
        @Html.ValidationMessageFor(model => model.start_date)
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.end_date)
    </div>
    <div class="editor-field">
        @Html.TextBoxFor(model => model.end_date, "{0:yyyy-MM-dd}", new { @class = "date-picker"})
        @Html.ValidationMessageFor(model => model.end_date)
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.quota)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.quota)
        @Html.ValidationMessageFor(model => model.quota)
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.remarks)
    </div>
    <div class="editor-field">
        @Html.TextAreaFor(model => model.remarks, new { @class = "expanding" })
        @Html.ValidationMessageFor(model => model.remarks)
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.Nominators)
    </div>
    <div class="editor-field">
        @Html.ListBox("nominatorids", new MultiSelectList(ViewBag.nominatorList, "UserId", "UserName", ViewBag.selectedNominators), new { @class = "chosen required" })
        @Html.ValidationMessage("nominatorids", "*Required Field.")
        <span class="field-note">Nominator with application nominated will not be removed.</span>
    </div>

</fieldset>
    
<p>
    <input type="submit" id="submit" value="Edit Nomination Level" />
</p>
}

<div>
    @Html.ActionLink("Back to Details", "Details", new { id = Model.Nomination.id })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(function () {
        });
    </script>
}
