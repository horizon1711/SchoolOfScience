@model IEnumerable<SchoolOfScience.Models.Application>

@{
    ViewBag.Title = "Index";
}

<h2>Application Management</h2>


@using (Html.BeginForm("Index", "Application", FormMethod.Post, new { id = "filter-form" }))
{
    <fieldset class="startCollapse">
        <legend>Search by Filter (Click to expand)</legend>
        <div class="filter">
            <div class="filter-field">
                <label for="program">Program:</label>
                @Html.DropDownList("program", ViewBag.programList as IEnumerable<SelectListItem>, "All", null)
            </div>
            <div class="filter-field">
                <label for="program_type">Program Type:</label>
                @Html.DropDownList("program_type", ViewBag.programTypeList as IEnumerable<SelectListItem>, "All", null)
            </div>
            <div class="filter-field">
                <label for="program_status">Program Status:</label>
                @Html.DropDownList("program_status", ViewBag.programStatusList as IEnumerable<SelectListItem>, "All", null)
            </div>
            <div class="filter-field">
                <label for="application_status">Application Status:</label>
                @Html.DropDownList("application_status", ViewBag.applicationStatusList as IEnumerable<SelectListItem>, "All", null)
            </div>
            <div class="filter-field">
                <div class="field-wrapper">
                    <label for="interview">Interview Required:</label>
                    @Html.CheckBox("interview")
                </div>
                <div class="field-wrapper">
                    <label for="appointment">Appointment Required:</label>
                    @Html.CheckBox("appointment")
                </div>
                <div class="field-wrapper">
                    <label for="exchange">Exchange Destination Required:</label>
                    @Html.CheckBox("exchange")
                </div>
                <div class="field-wrapper">
                    <label for="nomination">Nomination Required:</label>
                    @Html.CheckBox("nomination")
                </div>
            </div>
            <div class="clear-fix"></div>
            <div class="filter-field">
                <input type="submit" value="Search" />
                <input type="reset" value="Reset" />
            </div>
        </div>
    </fieldset>
}

<p></p>

<table class="data-table">
    <thead>
        <tr>
            <th>
                <input type="checkbox" id="checkAll"/>
            </th>
            <th>
                ID
            </th>
            <th>
                Program
            </th>
            <th>
                Student Name
            </th>
            <th>
                Academic Organization
            </th>
            <th>
                Academic Plan
            </th>
            <th>
                Academic Level
            </th>
            <th>
                Status
            </th>
            <th>
                @Html.DisplayNameFor(model => model.modified)
            </th>
            @*<th>
                Interview/Consultation
            </th>*@
            <th>
                Action
            </th>
        </tr>
    </thead>
    <tbody>
    @foreach (var item in Model)
    {
        <tr>
            <td>
                <input type="checkbox" class="checkItem" value="@item.id"/>
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.id)
            </td>
            <td>
                @Html.ActionLink(item.Program.name, "Details", "Program", new { id = item.program_id }, new { @class = "program-details-link" })
                <div class="program-note">
                    <div>
                    @if (!String.IsNullOrEmpty(item.Program.job_position))
                    {
                        @(item.Program.job_position)
                    }
                    </div>
                    <div>
                    @if (!String.IsNullOrEmpty(item.Program.host_name))
                    {
                        if (!String.IsNullOrEmpty(item.Program.website))
                        {
                            <a href="@(item.Program.website)" target="_blank" title="@(item.Program.website)">@(item.Program.host_name)</a>
                        }
                        else
                        {
                            @(item.Program.host_name)
                        }
                    }
                    </div>
                </div>
            </td>
            <td>
                <strong>@Html.DisplayFor(modelItem => item.StudentProfile.name) @Html.ActionLink(item.StudentProfile.id.ToString(), "Details", "StudentProfile", new { id = item.StudentProfile.id }, new { @class = "student-link" })</strong>
            </td>
            <td>
                @item.StudentProfile.academic_organization
            </td>
            <td>
                @item.StudentProfile.academic_plan_description
            </td>
            <td>
                @item.StudentProfile.academic_level
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ApplicationStatus.name)
            </td>
            <td>
                @String.Format("{0:yyyy-MM-dd HH:mm:ss}", item.modified)<br />
                [@Html.DisplayFor(modelItem => item.modified_by)]
            </td>
            @*<td>
                @foreach (var interview in item.Interviews.Where(i => i.InterviewStatus.display_to_student))
                {
                    <div>@(String.Format("{0:yyyy-MM-dd (ddd) HH:mm}", interview.start_time) + "-" + String.Format("{0:HH:mm}", interview.end_time))</div>
                }
                
                @foreach (var appointment in item.StudentProfile.Appointments.Where(o => o.AppointmentConcerns.Any(c => c.program_id == item.program_id)))
                {
                    <div>@(String.Format("{0:yyyy-MM-dd (ddd) HH:mm}", appointment.start_time) + "-" + String.Format("{0:HH:mm}", appointment.end_time))</div>
                }
            </td>*@
            <td>
                <ul class="action-list">
                    <li>
                        @Html.ActionLink("View", "Details", new { id = item.id }, new { @class = "view-link" })
                    </li>
                    <li>
                        @Html.ActionLink("Change Status", "Review", new { id = item.id }, new { @class = "review-link" }) 
                    </li>
                @if (item.ApplicationStatus.name != "Saved")
                {
                    <li>
                        @Html.ActionLink("Edit", "Edit", new { id = item.id }, new { @class = "edit-link" })
                    </li>
                }
                </ul>
            </td>
        </tr>
    }
    </tbody>

</table>

<div class="clear-fix"></div>

<p>
    <button type="button" id="batch-btn">Batch Action</button>
</p>

@section Scripts {
    <script>
        $(function () {
            $(".data-table").dataTable({
                "sScrollX": "100%",
                "aaSorting": [[8, "desc"]],
                "bPaginate": false,
                "aoColumnDefs": [
                    { 'bSortable': false, 'aTargets': [0] }]
            });

            $(".edit-link").click(function (e) {
                e.preventDefault();
                showDialog($(this).prop("href"), "#error-dialog", "#application-dialog");
            });

            $(".view-link").click(function (e) {
                e.preventDefault();
                showDialog($(this).prop("href"), "#error-dialog", "#application-dialog");
            });

            $(".review-link").click( function (e) {
                e.preventDefault();
                showDialog($(this).prop("href"), "#error-dialog", "#application-dialog");
            });

            $(".program-details-link").click( function (e) {
                e.preventDefault();
                showDialog($(this).prop("href"), "#error-dialog", "#program-details-dialog");
            });

            $(".student-link").click( function (e) {
                e.preventDefault();
                showDialog($(this).prop("href"), "#error-dialog", "#student-profile-dialog");
            });

            $("#checkAll").click(function () {
                $(".checkItem").attr("checked", $(this).is(":checked"));
            });

            $("#batch-btn").click( function (e) {
                e.preventDefault();
                var items = $(".checkItem:checked").map(function () { return $(this).val() }).get();
                var url = "@Html.Raw(Url.Action("BatchUpdate", "Application", new { items = "replaceItems" }))";
                url = url.replace("replaceItems", items.join('_'));
                showDialog(url, "#error-dialog", "#batch-action-dialog");
            });

            $("input[type=reset]").click(function (e) {
                e.preventDefault();
                $(".filter select").val('');
                $(".filter input[type=text]").val('');
                $(".filter input[type=checkbox]").attr("checked", false);
            });
        });
    </script>
}
