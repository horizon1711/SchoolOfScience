@model IEnumerable<SchoolOfScience.Models.Interview>

@{
    ViewBag.Title = "Index";
}

<h2>Interview Timeslots</h2>

@using (Html.BeginForm("Index", "Interview", FormMethod.Post, new { id = "filter-form" }))
{
    <fieldset class="collapse">
        <legend>Search by Filter (Click to expand)</legend>
        <div class="filter">
            <div class="filter-field">
                <label for="program">Program:</label>
                @Html.DropDownList("program", ViewBag.programList as IEnumerable<SelectListItem>, "All", null)
            </div>
            <div class="filter-field">
                <label for="program_type">Program Type:</label>
                @Html.DropDownList("program_type", ViewBag.programTypeList as IEnumerable<SelectListItem>, "All", null)
            </div>
            <div class="filter-field">
                <label for="program_status">Program Status:</label>
                @Html.DropDownList("program_status", ViewBag.programStatusList as IEnumerable<SelectListItem>, "All", null)
            </div>
            <div class="filter-field">
                <label for="interview_venue">Interview Venue:</label>
                @Html.DropDownList("interview_venue", ViewBag.interviewVenueList as IEnumerable<SelectListItem>, "All", null)
            </div>
            <div class="filter-field">
                <label for="interview_status">Interview Status:</label>
                @Html.DropDownList("interview_status", ViewBag.interviewStatusList as IEnumerable<SelectListItem>, "All", null)
            </div>
            <div class="filter-field">
                <label for="startdate">Date from:</label>
                @Html.TextBox("startdate", null, new { @class = "date-picker" })
                <label for="enddate"> to:</label>
                @Html.TextBox("enddate", null, new { @class = "date-picker" })
            </div>
            <div class="filter-field">
                <div class="field-wrapper">
                    <label for="assigned">Assigned:</label>
                    @Html.CheckBox("assigned", false)
                </div>
                <div class="field-wrapper">
                    <label for="available">Available:</label>
                    @Html.CheckBox("available", false)
                </div>
                <div class="field-wrapper">
                    <label for="upcoming">Upcoming:</label>
                    @Html.CheckBox("upcoming", false)
                </div>
            </div>
            <div class="clear-fix"></div>
            <div class="filter-field">
                <input type="submit" value="Search" />
                <input type="reset" value="Reset" />
            </div>
        </div>
    </fieldset>
}

<table class="data-table">
    <thead>
        <tr>
            <th>
                <input type="checkbox" id="checkAll"/>
            </th>
            <th>
                ID
            </th>
            <th>
                Date
            </th>
            <th>
                Time
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Program.name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.InterviewStatus.name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.venue_id)
            </th>
            <th>
                #
            </th>
            <th>
                Applicant
            </th>
            <th>
                Action
            </th>
        </tr>
    </thead>
    <tbody>
    @foreach (var item in Model) {
        <tr>
            <td>
                <input type="checkbox" class="checkItem" value="@item.id"/>
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.id)
            </td>
            <td>
                @String.Format("{0:yyyy-MM-dd (ddd)}", item.start_time)
            </td>
            <td>
                @String.Format("{0:HH:mm}", item.start_time) - @String.Format("{0:HH:mm}", item.end_time)
            </td>
            <td>
                @Html.ActionLink(item.Program.name, "Details", "Program", new { id = item.program_id }, new { @class = "program-details-link" })
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.InterviewStatus.name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.InterviewVenue.name)
            </td>
            <td>
                @foreach (var application in item.Applications)
                {
                    <div>
                        @Html.ActionLink(application.id.ToString(), "Details", "Application", new { id = application.id }, new { @class = "application-link" })
                    </div>
                }
            </td>
            <td>
                @foreach (var application in item.Applications)
                {
                    <div>
                        <strong>@Html.DisplayFor(modelItem => application.StudentProfile.name) @Html.ActionLink(application.StudentProfile.id.ToString(), "Details", "StudentProfile", new { id = application.StudentProfile.id }, new { @class = "student-link" })</strong>[@Html.DisplayFor(modelItem => application.StudentProfile.academic_organization)]
                        <a href="@Url.Action("Create", "InterviewComment", new { interview_id = item.id, application_id = application.id })" class="add-comment-link"><img src="@Url.Content("~/Images/Action/apply.gif")" class="comment-btn"/></a>
                        @*@Html.ActionLink("Add Comment", "Create", "InterviewComment", new { interview_id = item.id, application_id = application.id }, new { @class = "comment-link" })*@
                    </div>
                }
            </td>
            <td>
                <ul class="action-list">
                    <li>
                        @Html.ActionLink("Manage", "Edit", new { id = item.id }, new { @class = "manage-link" })
                    </li>
                    <li>
                        @Html.ActionLink("Comments", "Index", "InterviewComment", new { interview_id = item.id }, new { @class = "comments-link" })
                    </li>
                    <li>
                        @Html.ActionLink("Delete", "Delete", new { id=item.id }, new { @class = "manage-link" })
                    </li>
                </ul>
            </td>
        </tr>
    }
    </tbody>

</table>

<div class="clear-fix"></div>

<p>
    <button type="button" id="batchdelete-btn">Batch Delete</button>
</p>
<p>
    <button type="button" id="batchupdate-btn">Batch Update</button>
</p>
<p>
    <button type="button" id="commenttemplate-btn">Download Comment Template</button>
</p>
<p>
    <button type="button" id="assignmenttemplate-btn">Download Assignment Template</button>
</p>

@section Scripts {
    <script>
        $(function () {
            $(".data-table").dataTable({
                "aaSorting": [[2, "asc"], [3, "asc"]],
                "bPaginate": false,
                "aoColumnDefs": [
                    { 'bSortable': false, 'aTargets': [0] }]
            });


            $(".add-comment-link").click(function (e) {
                e.preventDefault();
                showDialog($(this).prop("href"), "#error-dialog", "#add-edit-dialog");
            });

            $(".manage-link").click(function (e) {
                e.preventDefault();
                showDialog($(this).prop("href"), "#error-dialog", "#interview-manage-dialog");
            });

            $(".comments-link").click(function (e) {
                e.preventDefault();
                showDialog($(this).prop("href"), "#error-dialog", "#interview-comment-dialog");
            });

            $(".application-link").click(function (e) {
                e.preventDefault();
                showDialog($(this).prop("href"), "#error-dialog", "#application-dialog");
            });


            $(".program-details-link").click( function (e) {
                e.preventDefault();
                showDialog($(this).prop("href"), "#error-dialog", "#program-details-dialog");
            });

            $(".student-link").click( function (e) {
                e.preventDefault();
                showDialog($(this).prop("href"), "#error-dialog", "#student-profile-dialog");
            });

            $("#checkAll").click(function () {
                $(".checkItem").attr("checked", $(this).is(":checked"));
            });

            $("#batchdelete-btn").click(function (e) {
                e.preventDefault();
                var items = $(".checkItem:checked").map(function () { return $(this).val() }).get();
                var url = "@Html.Raw(Url.Action("BatchDelete", "Interview", new { items = "replaceItems" }))";
                url = url.replace("replaceItems", items.join('_'));
                showDialog(url, "#error-dialog", "#batch-action-dialog");
            });

            $("#batchupdate-btn").click(function (e) {
                e.preventDefault();
                var items = $(".checkItem:checked").map(function () { return $(this).val() }).get();
                var url = "@Html.Raw(Url.Action("BatchUpdate", "Interview", new { items = "replaceItems" }))";
                url = url.replace("replaceItems", items.join('_'));
                showDialog(url, "#error-dialog", "#batch-action-dialog");
            });

            $("#commenttemplate-btn").click(function (e) {
                e.preventDefault();
                var items = $(".checkItem:checked").map(function () { return $(this).val() }).get();
                var url = "@Html.Raw(Url.Action("CommentTemplate", "Interview", new { items = "replaceItems" }))";
                url = url.replace("replaceItems", items.join('_'));
                window.open(url, "Download Comment Template");
            });

            $("#assignmenttemplate-btn").click(function (e) {
                e.preventDefault();
                var items = $(".checkItem:checked").map(function () { return $(this).val() }).get();
                var url = "@Html.Raw(Url.Action("AssignmentTemplate", "Interview", new { items = "replaceItems" }))";
                url = url.replace("replaceItems", items.join('_'));
                window.open(url, "Download Assignment Template");
            });

            $("input[type=reset]").click(function (e) {
                e.preventDefault();
                $(".filter select").val('');
                $(".filter input[type=text]").val('');
                $(".filter input[type=checkbox]").attr("checked", false);
            });
        });
    </script>
}